#!/usr/bin/env bash

set -euo pipefail

# This is a dirty hack: zenity is a nice script from gnome, the only reason
# we're defining our own is to trick aws-vault into exec-ing this script to
# fetch MFA information.
# Ideally, we'd make some change to aws-vault itself to make it more flexible
# with the 2FA prompts it can use.

while [[ $# -gt 0 ]]; do
    case $1 in
        --entry)
            shift
            ;;
        --title)
            TITLE="$2"
            shift # past argument
            shift # past value
            ;;
        --text)
            TEXT="$2"
            shift # past argument
            shift # past value
            ;;
        *)
            echo "Unknown option $1"
            exit 1
            ;;
    esac
done

RESULT=""

if [ "$TITLE" = "aws-vault" ] && [ "$TEXT" = "Enter MFA code for arn:aws:iam::900965112463:mfa/jeremy:" ]; then
    # Try to get the 2fa from an attached cell phone.
    if two_factors=$(2fa-cli 2>&1); then
        RESULT=$(echo "$two_factors" | grep "Amazon Web Services (jeremy@honor)" | cut -f 1)
    fi
fi

# If we didn't get a RESULT already, just prompt the user.
if [ -z "$RESULT" ]; then
    # This trick for finding a tty comes from: https://unix.stackexchange.com/a/270372
    # We're going through such weird hoops because aws-vault invokes us with
    # stdin/out/err buffered so they can't be used to do a readline sort of
    # operation.
    tty="/dev/$(ps hotty $$)"
    # Note we're careful to only print to $tty. That's because this script
    # might be called via a clever ssh ProxyCommand, and printing to stdout would
    # actually inject bytes into the SSH TCP connection!
    echo "" >"$tty"
    echo -n "$TITLE: $TEXT" >"$tty"
    # We can't read from stdin here because it would mess up the ssh protocol (see
    # comment above about $tty).
    read -rs MFA <"$tty"
    # Give an immediate sense of progress when the user presses enter.
    echo "" >"$tty"
fi

echo "$MFA"

if [ -z "$MFA" ]; then
    echo "You must enter a MFA" >/dev/stderr
    exit 1
fi
