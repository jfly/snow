#!/usr/bin/env nix-shell
#!nix-shell -i python3 -p python3

import contextlib
import argparse
import time


def main():
    parser = argparse.ArgumentParser(
        description="Run a stopwatch starting a 0, unless [countdown] is specified, then we'll count down."
    )
    parser.add_argument(
        "countdown", type=str_to_seconds, help="Optional countdown in seconds or HH:MM:SS format", nargs="?"
    )

    args = parser.parse_args()
    if args.countdown:
        count(down_from_seconds=args.countdown)
    else:
        count()

def str_to_seconds(s: str) -> int:
    pieces = s.split(":")
    if len(pieces) > 3:
        raise argparse.ArgumentTypeError("Too many :")
    elif len(pieces) == 3:
        hours, minutes, seconds = pieces
    elif len(pieces) == 2:
        hours = ""
        minutes, seconds = pieces
    elif len(pieces) == 1:
        hours = minutes = ""
        (seconds,) = pieces
    else:
        assert False

    hours = hours or "0"
    minutes = minutes or "0"
    seconds = seconds or "0"
    return int(hours)*3600 + int(minutes)*60 + int(seconds)

def count(down_from_seconds: int | None = None):
    with disable_cursor():
        try:
            _count(down_from_seconds=down_from_seconds)
        except KeyboardInterrupt:
            # Don't vomit to the screen when the user does a ctrl-c
            pass


def _count(down_from_seconds: int | None = None):
    start = time.time()
    while True:
        elapsed = time.time() - start
        if down_from_seconds is None:
            display_seconds = elapsed
        else:
            display_seconds = down_from_seconds - elapsed
            if elapsed >= down_from_seconds:
                # Ensure we give folks the satisfaction of seeing a 0 at the end.
                print(f"\r{pretty(seconds=0)}", end="")
                break

        print(f"\r{pretty(seconds=display_seconds)}", end="")
        time.sleep(0.01)


@contextlib.contextmanager
def disable_cursor():
    # Escape sequences copied from https://stackoverflow.com/a/70550803/1739415
    try:
        # Disable the cursor
        print("\033[?25l", end="")

        yield
    finally:
        # Ensure that no matter what, we re-enable the cursor.
        print("\033[?25h", end="")


def pretty(seconds: float):
    hours = int(seconds // 3600)
    seconds = seconds % 3600

    minutes = int(seconds // 60)
    seconds = seconds % 60

    return f"{hours:02d}:{minutes:02d}:{seconds:05.2f}"


if __name__ == "__main__":
    main()
