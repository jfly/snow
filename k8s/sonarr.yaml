kind: Deployment
apiVersion: apps/v1
metadata:
  name: sonarr
  namespace: vpn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      volumes:
      # TODO: look into k8s persistent volumes for this
      - name: sonarr-config
        hostPath:
          path: /state/sonarr-config
      - name: mnt-media
        hostPath:
          path: /mnt/media
      containers:
        - name: sonarr
          image: cr.hotio.dev/hotio/sonarr
          env:
            - name: TZ
              value: "America/Los_Angeles"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1002"
            - name: UMASK
              value: "002"
          volumeMounts:
            - name: sonarr-config
              mountPath: /config
            - name: mnt-media
              mountPath: /mnt/media
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: vpn

spec:
  ports:
    - name: http
      port: 80
      targetPort: 8989
  selector:
    app: sonarr
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: sonarr
  namespace: vpn
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: default-snowauth@kubernetescrd
spec:
  tls:
    - hosts:
      - sonarr.clark.snowdon.jflei.com
      secretName: sonarr-tls
  rules:
  - host: sonarr.clark.snowdon.jflei.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: sonarr
              port:
                number: 80
