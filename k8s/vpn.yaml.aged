# Based on https://docs.k8s-at-home.com/guides/pod-gateway/

apiVersion: v1
kind: Namespace
metadata:
  name: vpn
  labels:
    routed-gateway: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: wireguard
data:
  # cat wireguard.conf | base64 -w 0 | tools/encrypt
  vpnConfigfile: |-
    -----BEGIN AGE ENCRYPTED FILE-----
    YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBUNFMrNzZkbm5lZURZUndD
    QVNJOEQzZVB2S0xybjFuMzZtZlR1UjlnZ0RJClQwRXA0UHFqNUZDRjdnRnZLTEFi
    QzVQckgrbkhpUG1EN0FyNmpHSjlwSWMKLS0tIHJ0VnB4ZmhXQm5paG8zUUVNTTdO
    L0VhbmN5eFZwM3lGdHVtK3lFeTVxQWMKNSAdB8uUcGZaUWo8JaA0OT/eYqLdkOmE
    EfAgyikBVGbvdk2mROcc+NHl4ZFQCiouf2JFGAw7iK44pWpQwx2ALRuXxW7IK7s3
    GdzSb6thb8cg3FqnCzkNEfSLKhjwUKyGsbSyHfFbWyzyTJ3qtA3GOnpXrj3bmFv1
    cBX+C8YVTasG9S7QPfCkLQHldoEeqp/NnQGx9oqVVx3u4NbD9HZogZ6likU0WLPw
    3sPnHyJXtXDEHgkJjcBDhktpZvXluV4Wt4/Ii5w7KUnpzlPmg4AUhRo9Vg547W2q
    xHxjwbptSHG2cYjlBUqKQIiNIGFCHv5XY2olSER4v6PF7vmUdpk10uFpfALgupJz
    Edy2nQUMu71jRxujnezrudWcm5prwr7KjQFiTW3kTsLUsdyFVydQHsdnlcnqZdyY
    GmnRCPxrtc7eykUAUKdZ7GXpgBFM6lrYWkSZErGKHXm0Mn133aCfKR6twT1lLf0u
    1sd1q/q2fKgzFKRU7S0W7u8Ck2cPSLg9B5D/b10hIXo=
    -----END AGE ENCRYPTED FILE-----
---
# Install pod-gateway helm chart: https://github.com/k8s-at-home/charts/tree/master/charts/stable/pod-gateway
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: vpn-gateway
  namespace: default
  labels:
spec:
  chart: pod-gateway
  repo: https://k8s-at-home.com/charts/
  version: 5.2.1
  targetNamespace: default
  # See https://github.com/k8s-at-home/charts/blob/master/charts/stable/pod-gateway/values.yaml
  valuesContent: |-
    routed_namespaces: [vpn]
    settings:
      VPN_INTERFACE: wg0
      VPN_BLOCK_OTHER_TRAFFIC: true
      # Allow VPN traffic over this port
      VPN_TRAFFIC_PORT: 51820
      # The default value for VPN_LOCAL_CIDRS routes all of 10.0.0.0/8 to the
      # default K8S gateway, which breaks communication with ip addresses on
      # our VPN subnet (mullvad provides a DNS server at 10.64.0.1 that we'd
      # like to use).
      VPN_LOCAL_CIDRS: "10.42.0.0/16 10.43.0.0/16"
      # Route internal K8s and local home traffic to the default K8S gateway
      # (from https://docs.k8s-at-home.com/guides/pod-gateway/#routed-pod-fails-to-init)
      NOT_ROUTED_TO_GATEWAY_CIDRS: "10.42.0.0/16 10.43.0.0/16"

    publicPorts:
    - hostname: transmission
      IP: 10 # must be an integer between 2 and VXLAN_GATEWAY_FIRST_DYNAMIC_IP (20 by default)
      ports:
      - type: udp
        port: 61207
      - type: tcp
        port: 61207

    addons:
      vpn:
        enabled: true
        type: wireguard

        # Force use of the modern (?) iptables. If we let it fall back to the legacy mode, it fails when running ip6tables-restore:
        #
        # $ k logs deploy/vpn-gateway-pod-gateway wireguard
        # [INFO] Running iptables in legacy mode
        # [#] ip link add wg0 type wireguard
        # [#] wg setconf wg0 /dev/fd/63
        # [#] ip -4 address add 10.67.182.177/32 dev wg0
        # [#] ip -6 address add fc00:bbbb:bbbb:bb01::4:b6b0/128 dev wg0
        # [#] ip link set mtu 1370 up dev wg0
        # [#] resolvconf -a wg0 -m 0 -x
        # [#] wg set wg0 fwmark 51820
        # [#] ip -6 route add ::/0 dev wg0 table 51820
        # [#] ip -6 rule add not fwmark 51820 table 51820
        # [#] ip -6 rule add table main suppress_prefixlength 0
        # [#] ip6tables-restore -n
        # ip6tables-restore v1.8.4 (legacy): ip6tables-restore: unable to initialize table 'raw'
        #
        # Error occurred at line: 1
        # Try `ip6tables-restore -h' or 'ip6tables-restore --help' for more information.
        # [#] resolvconf -d wg0 -f
        # [#] ip -6 rule delete table 51820
        # [#] ip -6 rule delete table main suppress_prefixlength 0
        # [#] ip link delete dev wg0
        # [ERROR] Received non-zero exit code (2) executing the command sudo /usr/bin/wg-quick up "${INTERFACE}" on line 10.
        #
        # TODO: file an issue with https://github.com/k8s-at-home/container-images/tree/main/apps/wireguard
        env:
          IPTABLES_BACKEND: nft
        configFileSecret: wireguard

        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - if [ $(curl -s https://am.i.mullvad.net/json | jq '.mullvad_exit_ip') = "true" ]; then exit 0; else exit 1; fi
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 1

        networkPolicy:
          enabled: true

          egress:
            - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
              ports:
              # VPN_TRAFFIC_PORT
              - port: 51820
                protocol: UDP
            - to:
                # Allow traffic within K8S - change if your K8S cluster uses a different CIDR
              - ipBlock:
                  cidr: 10.0.0.0/8

---
# Ensure that even if something goes wrong, traffic won't leak outside of the vpn.
# https://docs.k8s-at-home.com/guides/pod-gateway/#network-policy
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: vpn-namespace
  namespace: vpn
spec:
  podSelector: {}
  ingress:
  - from:
    # Only allow ingress from K8S
    - ipBlock:
        cidr: 10.0.0.0/8
  egress:
  - to:
    # Only allow egress to K8S
    - ipBlock:
        cidr: 10.0.0.0/8
  policyTypes:
    - Ingress
    - Egress
