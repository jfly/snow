kind: Deployment
apiVersion: apps/v1
metadata:
  name: jackett
  namespace: vpn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jackett
  template:
    metadata:
      labels:
        app: jackett
    spec:
      volumes:
      # TODO: look into k8s persistent volumes for this
      - name: jackett-config
        hostPath:
          path: /state/jackett-config
      - name: mnt-media
        hostPath:
          path: /mnt/media
      containers:
        - name: jackett
          image: cr.hotio.dev/hotio/jackett:latest
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/Los_Angeles"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1002"
            - name: UMASK
              value: "002"
          volumeMounts:
            - name: jackett-config
              mountPath: /config
---
apiVersion: v1
kind: Service
metadata:
  name: jackett
  namespace: vpn

spec:
  ports:
    - name: http
      port: 80
      targetPort: 9117
  selector:
    app: jackett
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: jackett
  namespace: vpn
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: default-snowauth@kubernetescrd
spec:
  tls:
    - hosts:
      - jackett.snow.jflei.com
      secretName: jackett-tls
  rules:
  - host: jackett.snow.jflei.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: jackett
              port:
                number: 80
