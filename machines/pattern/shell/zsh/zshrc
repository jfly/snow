export HOSTNAME=$(hostname)

###
### Configure less
###
export LESS="--no-init --quit-if-one-screen --RAW-CONTROL-CHARS"
##################################

## Python stuff
# Make sure we never `pip install` things outside of a virtualenv.
export PIP_REQUIRE_VIRTUALENV=true
##################################

###
### Set up FZF
###
export FZF_DEFAULT_COMMAND='rg --files --hidden'
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
##################################

###
### Don't add commands to the history if they start with a space.
###
setopt HIST_IGNORE_SPACE

###
### Bash-like navigation
### Copied from: https://stackoverflow.com/a/10860628/1739415
### Also see https://stackoverflow.com/a/3483679/1739415
###
# Bind ctrl-u to cut to beginning of line.
bindkey "^U" backward-kill-line

# Change behavior of alt-b and alt-f to behave more like bash with regards to
# trailing whitespace.
autoload -Uz forward-word-match
zle -N forward-word forward-word-match
zstyle ':zle:*' skip-whitespace-first true
zstyle ':zle:*' word-chars ''

# Hide files from make autocompletion suggestions.
zstyle ':completion:*:*:make:*' tag-order 'targets'

# Bind alt-backspace to delete one not so aggressive word backwards.
bindkey '^[^?' backward-kill-word

### Bind ctrl-w to delete one aggressive word backwards.
backward-kill-dir() {
    local WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
    zle backward-kill-word
}
zle -N backward-kill-dir
bindkey "^W" backward-kill-dir
##################################

###
### Fix output of time to look more like bash.
### See https://superuser.com/a/71890.
###
export TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'
##################################

###
### Set up alt-c to pick a commit
###
fzf-commit-widget() {
  LBUFFER="${LBUFFER}$(pick_commit)"
  local ret=$?
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
zle     -N    fzf-commit-widget
bindkey '\ec' fzf-commit-widget
FZF_ALT_C_COMMAND="" # don't allow fzf to rebind alt+c, we're already using it!
##################################

###
### Set up alt-p to pick a x11 window's pid
###
pick_xpid() {
    xprop _NET_WM_PID | sed 's/_NET_WM_PID(CARDINAL) = //'
}
fzf-xpid-widget() {
  LBUFFER="${LBUFFER}$(pick_xpid)"
  local ret=$?
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}
zle     -N    fzf-xpid-widget
bindkey '\ep' fzf-xpid-widget
##################################

###
### Nix
###
# From https://nixos.wiki/wiki/Locales:
#   > You may need to set the environmental variable LOCALE_ARCHIVE to point to
#   > your system's locale-achive.
export LOCALE_ARCHIVE="${LOCALE_ARCHIVE:-/usr/lib/locale/locale-archive}"
##################################

###
### Aliases
###
alias k="kubectl"
alias o=xdg-open
# Workaround to get a bash with readline support. See
# https://github.com/NixOS/nixpkgs/issues/59209
alias bash="nix run nixpkgs#bashInteractive --"
##################################

###
### Docker
###
function de {
    CONTAINER=$1
    shift
    CMD="docker exec -it $CONTAINER env TERM=xterm bash"
    if [ "$#" -gt 0 ]; then
        CMD="$CMD -c '$*'"
    fi
    echo "$CMD"
    eval "$CMD"
}
function dr {
    IMAGE=$1
    shift
    CMD="docker run -it --entrypoint=bash $IMAGE"
    if [ "$#" -gt 0 ]; then
        CMD="$CMD -c '$*'"
    fi
    echo "$CMD"
    eval "$CMD"
}
##################################

###
### Git
###
function pick_commit {
    glola --color=always | fzf --ansi --no-sort --reverse --multi | while read -r item; do
        echo -n "${item}" | sed 's/^[ |/\\*]*//' | awk '{printf $1" "}'
    done

    echo
}
##################################
