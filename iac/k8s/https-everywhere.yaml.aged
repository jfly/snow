# Install cert-manager helm chart: https://cert-manager.io/docs/installation/helm/
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: cert-manager
  namespace: default
  labels:
spec:
  chart: cert-manager
  repo: https://charts.jetstack.io
  version: 1.17.1
  targetNamespace: cert-manager
  createNamespace: true
  valuesContent: |-
    installCRDs: true
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-api-token-secret
  # Must be the same as the namespace where the cert-manager controller pod runs!
  # https://github.com/cert-manager/cert-manager/issues/263
  namespace: cert-manager
type: Opaque
stringData:
  api-token: |-
    -----BEGIN AGE ENCRYPTED FILE-----
    YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBwSk04QThSK2FoS2JRdkxY
    N0dYQ2JqTEErakszVWNyVmV1ZlRJOHZ1NUFRCkZPZFFoL1dISlpSdXpSRFA3Smg5
    U2JPeVo0Z0pzckcycHZlMzJ2SElsT2sKLS0tIEJ4bk5xQTdpUEZwbURyWFY2bG44
    cXJRcjlUd0UwTmJkTjlDZ0FUVGxESDQKNwGDW7Rq7Lm9zE+izZrIVBdlJ2TvOrZs
    NHPbfaRtZCNA0yxjZCjEte+LZU6XEbiWXGiymss+xtkYg8Cq4ivnG8OX48D9GxCg
    -----END AGE ENCRYPTED FILE-----
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: jeremyfleischman@gmail.com
    privateKeySecretRef:
      name: prod-issuer-account-key
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
      - dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cloudflare-api-token-secret
              key: api-token
        selector: {}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: http-to-https
spec:
  redirectScheme:
    scheme: https
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: http-to-https
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: default-http-to-https@kubernetescrd
spec:
  defaultBackend:
    # This is weird, because there shouldn't be any
    # possibility of any of these rules matching a request (because of the
    # http-to-https middleware that happens before).
    # TODO: create some a standard blackhole service to point these sort of
    # things at.
    service:
      name: snow-web
      port:
        number: 80
