# shellcheck shell=bash

# misc
alias ssh="light_dark_ssh"
alias k="kubectl"
alias o=xdg-open
# Workaround to get a bash with readline support. See
# https://github.com/NixOS/nixpkgs/issues/59209
alias bash="nix run nixpkgs#bashInteractive --"

# docker stuff
function de {
    CONTAINER=$1
    shift
    CMD="docker exec -it $CONTAINER env TERM=xterm bash"
    if [ "$#" -gt 0 ]; then
        CMD="$CMD -c '$*'"
    fi
    echo "$CMD"
    eval "$CMD"
}
function dr {
    IMAGE=$1
    shift
    CMD="docker run -it --entrypoint=bash $IMAGE"
    if [ "$#" -gt 0 ]; then
        CMD="$CMD -c '$*'"
    fi
    echo "$CMD"
    eval "$CMD"
}

# git stuff
function with_commit {
    (
        set -e
        _og_ref=$(git symbolic-ref HEAD 2>/dev/null) || _og_ref=$(git rev-parse --short HEAD 2>/dev/null)
        _og_ref=${_og_ref#refs/heads/}

        _commit=$1
        shift
        git checkout -b temp "$_commit"
        function _cleanup {
            git checkout "$_og_ref"
            git branch -D temp
        }
        trap _cleanup EXIT

        "$@"
    )
}
function pick_commit {
    glola --color=always | fzf --ansi --no-sort --reverse --multi | while read -r item; do
        echo -n "${item}" | sed 's/^[ |/\\*]*//' | awk '{printf $1" "}'
    done

    echo
}
function gnb {
    if [ -z "$1" ]; then
        echo "Please specify a branch name to create." >>/dev/stderr
    else
        local stashed
        stashed=$(git stash)

        git fetch upstream
        git checkout --no-track -b "$1" upstream/master
        git push -u origin "$1"

        if [ "$stashed" != "No local changes to save" ]; then
            git stash apply
            echo "I just did a git stash apply, if things worked well, don't forget to do a 'git stash drop'"
        fi
    fi
}
co() {
    if dir=$(jgit co "$@"); then
        cd "$dir"
    else
        return $?
    fi
}

nix-hack() {
    if dir=$(command nix-hack "$@"); then
        cd "$dir"
    else
        return $?
    fi
}

# quick hacks
newpy() {
    if dir=$(command newpy "$@"); then
        cd "$dir"
    else
        return $?
    fi
}
